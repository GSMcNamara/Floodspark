version: "3.8"

services:

  resty:
    build: ./resty
    container_name: resty
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backend

  elk:
    build: ./elk
    container_name: elk
    environment:
      - ES_CONNECT_RETRY=300
    networks:
      - backend

#  p0f:
#    build: ./p0f
#    container_name: p0f
#    volumes:
#      - p0f_data:/tmp/p0f
#    network_mode: "host"

#  filebeat:
#    build: ./filebeat
#    container_name: filebeat
#    volumes:
#      - p0f_data:/tmp/p0f
#    networks:
#      - backend

  redis:
    build: ./redis
    container_name: redis
    networks:
      - backend

# Honeypot services below

# Tanner Redis Service
  tanner_redis:
    build: ./tanner/docker/redis
    container_name: tanner_redis
    restart: always
    stop_signal: SIGKILL
    tty: true
    networks:
#     - tanner_local
     - backend
    image: "mushorg/redis:latest"
    read_only: true

# PHP Sandbox service
  tanner_phpox:
    build: ./tanner/docker/phpox
    container_name: tanner_phpox
    restart: always
    stop_signal: SIGKILL
    tty: true
    networks:
#     - tanner_local
     - backend
    image: "mushorg/phpox:latest"
    read_only: true
    tmpfs: "/tmp"

# Tanner API Service
  tanner_api:
    build: ./tanner/docker/tanner
    container_name: tanner_api
    restart: always
    stop_signal: SIGKILL
    tmpfs:
     - /tmp/tanner:uid=65534,gid=65534
     - /var/log/tanner:uid=65534,gid=65534
    tty: true
    networks:
#     - tanner_local
     - backend
    image: "mushorg/tanner:latest"
    read_only: true
    command: tannerapi 
    depends_on:
     - tanner_redis

# Tanner WEB Service
  tanner_web:
    build: ./tanner/docker/tanner
    container_name: tanner_web
    restart: always
    stop_signal: SIGKILL
    tmpfs:
     - /tmp/tanner:uid=65534,gid=65534
     - /var/log/tanner:uid=65534,gid=65534
    tty: true
    networks:
#     - tanner_local
     - backend
    ports:
     - "8091:8091"
    image: "mushorg/tanner:latest"
    command: tannerweb
    read_only: true
    depends_on:
     - tanner_redis

# Tanner Service
  tanner:
    build: ./tanner/docker/tanner
    container_name: tanner
    restart: always
    stop_signal: SIGKILL
    tmpfs:
     - /tmp/tanner:uid=65534,gid=65534
     - /var/log/tanner:uid=65534,gid=65534
     - /opt/tanner/files:uid=65534,gid=65534
    tty: true
    networks:
#     - tanner_local
     - backend
    ports:
     - "8090:8090"
    image: "mushorg/tanner:latest"
    command: tanner
    read_only: true
    depends_on:
     - tanner_api
     - tanner_web
     - tanner_phpox

# Snare service
  snare:
    build: ./snare
    container_name: snare
    restart: always
    stop_signal: SIGKILL
    tty: true
    networks:
#     - snare_local
     - backend
#    ports:
#     - "80:80"
#     - "8080:80"
    image: "mushorg/snare:latest"
    depends_on:
     - tanner

networks:
  backend:

#volumes:
#  p0f_data:
