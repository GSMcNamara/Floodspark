#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Tue Jun 23 00:40:30 2020
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
                          ;# script wasn't run conservatively originally
if {$force_conservative} {
        set send_slow {1 .1}
        proc send {ignore arg} {
                sleep .1
                exp_send -s -- $arg
        }
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn /opt/elasticsearch/bin/elasticsearch-setup-passwords interactive
match_max 100000
expect -exact "future versions of Elasticsearch will require Java 11; your Java version from \[/usr/lib/jvm/java-8-openjdk-amd64/jre\] does not meet this requirement\r
Initiating the setup of passwords for reserved users elastic,apm_system,kibana,logstash_system,beats_system,remote_monitoring_user.\r
You will be prompted to enter passwords as the process progresses.\r
Please confirm that you would like to continue \[y/N\]"
send -- "y\r"
expect -exact "y\r
\r
\r
Enter password for \[elastic\]: "
send -- "qE*7Pj43Or\r"
expect -exact "\r
Reenter password for \[elastic\]: "
send -- "qE*7Pj43Or\r"
expect -exact "\r
Enter password for \[apm_system\]: "
send -- "qE*7Pj43Or\r"
expect -exact "\r
Reenter password for \[apm_system\]: "
send -- "qE*7Pj43Or\r"
expect -exact "\r
Enter password for \[kibana\]: "
send -- "qE*7Pj43Or\r"
expect -exact "\r
Reenter password for \[kibana\]: "
send -- "qE*7Pj43Or\r"
expect -exact "\r
Enter password for \[logstash_system\]: "
send -- "qE*7Pj43Or\r"
expect -exact "\r
Reenter password for \[logstash_system\]: "
send -- "qE*7Pj43Or\r"
expect -exact "\r
Enter password for \[beats_system\]: "
send -- "qE*7Pj43Or\r"
expect -exact "\r
Reenter password for \[beats_system\]: "
send -- "qE*7Pj43Or\r"
expect -exact "\r
Enter password for \[remote_monitoring_user\]: "
send -- "qE*7Pj43Or\r"
expect -exact "\r
Reenter password for \[remote_monitoring_user\]: "
send -- "qE*7Pj43Or\r"
expect eof
