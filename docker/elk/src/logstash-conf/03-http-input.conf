input {
        http {
                port => 5045
                type => "logstash" #do not change this
        }
}

filter {
        json {
                source => "message"
        }

        # doing our privacy mod for demo mode below    
#        mutate {
#               gsub => ["message", "%{[original_request_headers][ip_address]}", "REDACTED.FOR.DEMO.MODE"]
#        }

        #If testing locally, geo IP lookup will not work with a private IP address. Put a public one below.
#        mutate {
#              update => {"[original_request_headers][ip_address]" => "143.92.32.86"}
#        }

        geoip {
                source => "[original_request_headers][ip_address]"
        }

        mutate {
                replace => {
                        "[headers][http_accept]" => "%{[original_request_headers][accept]}"
                        "[headers][http_host]" => "%{[original_request_headers][host]}"
                        "[headers][http_user_agent]" => "%{[original_request_headers][user-agent]}"
                        "[headers][request_method]" => "%{[original_request_headers][method]}"
                        "[headers][http_version]" => "%{[original_request_headers][http_version]}"
                }
                # doing our privacy mod for demo mode below    
#               update => {"[original_request_headers][ip_address]" => "REDACTED.FOR.DEMO.MODE"}
        }

        # checking for presence as per https://stackoverflow.com/questions/30309096/logstash-check-if-field-exists
        if ("" in [original_request_headers][content-length]){
                mutate {
                        replace => { "[headers][content_length]" => "%{[original_request_headers][content-length]}" }
                }
        } else {
                mutate {
                        remove_field => [ "[headers][content_length]" ]
                }
        }
}
